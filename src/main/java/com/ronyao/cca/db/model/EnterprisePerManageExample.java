package com.ronyao.cca.db.model;

import java.util.ArrayList;
import java.util.List;

public class EnterprisePerManageExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public EnterprisePerManageExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidIsNull() {
			addCriterion("enterpriseId is null");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidIsNotNull() {
			addCriterion("enterpriseId is not null");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidEqualTo(Integer value) {
			addCriterion("enterpriseId =", value, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidNotEqualTo(Integer value) {
			addCriterion("enterpriseId <>", value, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidGreaterThan(Integer value) {
			addCriterion("enterpriseId >", value, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidGreaterThanOrEqualTo(Integer value) {
			addCriterion("enterpriseId >=", value, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidLessThan(Integer value) {
			addCriterion("enterpriseId <", value, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidLessThanOrEqualTo(Integer value) {
			addCriterion("enterpriseId <=", value, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidIn(List<Integer> values) {
			addCriterion("enterpriseId in", values, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidNotIn(List<Integer> values) {
			addCriterion("enterpriseId not in", values, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidBetween(Integer value1, Integer value2) {
			addCriterion("enterpriseId between", value1, value2, "enterpriseid");
			return (Criteria) this;
		}

		public Criteria andEnterpriseidNotBetween(Integer value1, Integer value2) {
			addCriterion("enterpriseId not between", value1, value2,
					"enterpriseid");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeIsNull() {
			addCriterion("professionType is null");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeIsNotNull() {
			addCriterion("professionType is not null");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeEqualTo(Byte value) {
			addCriterion("professionType =", value, "professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeNotEqualTo(Byte value) {
			addCriterion("professionType <>", value, "professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeGreaterThan(Byte value) {
			addCriterion("professionType >", value, "professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeGreaterThanOrEqualTo(Byte value) {
			addCriterion("professionType >=", value, "professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeLessThan(Byte value) {
			addCriterion("professionType <", value, "professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeLessThanOrEqualTo(Byte value) {
			addCriterion("professionType <=", value, "professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeIn(List<Byte> values) {
			addCriterion("professionType in", values, "professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeNotIn(List<Byte> values) {
			addCriterion("professionType not in", values, "professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeBetween(Byte value1, Byte value2) {
			addCriterion("professionType between", value1, value2,
					"professiontype");
			return (Criteria) this;
		}

		public Criteria andProfessiontypeNotBetween(Byte value1, Byte value2) {
			addCriterion("professionType not between", value1, value2,
					"professiontype");
			return (Criteria) this;
		}

		public Criteria andOnemanagerIsNull() {
			addCriterion("oneManager is null");
			return (Criteria) this;
		}

		public Criteria andOnemanagerIsNotNull() {
			addCriterion("oneManager is not null");
			return (Criteria) this;
		}

		public Criteria andOnemanagerEqualTo(Byte value) {
			addCriterion("oneManager =", value, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerNotEqualTo(Byte value) {
			addCriterion("oneManager <>", value, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerGreaterThan(Byte value) {
			addCriterion("oneManager >", value, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerGreaterThanOrEqualTo(Byte value) {
			addCriterion("oneManager >=", value, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerLessThan(Byte value) {
			addCriterion("oneManager <", value, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerLessThanOrEqualTo(Byte value) {
			addCriterion("oneManager <=", value, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerIn(List<Byte> values) {
			addCriterion("oneManager in", values, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerNotIn(List<Byte> values) {
			addCriterion("oneManager not in", values, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerBetween(Byte value1, Byte value2) {
			addCriterion("oneManager between", value1, value2, "onemanager");
			return (Criteria) this;
		}

		public Criteria andOnemanagerNotBetween(Byte value1, Byte value2) {
			addCriterion("oneManager not between", value1, value2, "onemanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerIsNull() {
			addCriterion("twoManager is null");
			return (Criteria) this;
		}

		public Criteria andTwomanagerIsNotNull() {
			addCriterion("twoManager is not null");
			return (Criteria) this;
		}

		public Criteria andTwomanagerEqualTo(Byte value) {
			addCriterion("twoManager =", value, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerNotEqualTo(Byte value) {
			addCriterion("twoManager <>", value, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerGreaterThan(Byte value) {
			addCriterion("twoManager >", value, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerGreaterThanOrEqualTo(Byte value) {
			addCriterion("twoManager >=", value, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerLessThan(Byte value) {
			addCriterion("twoManager <", value, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerLessThanOrEqualTo(Byte value) {
			addCriterion("twoManager <=", value, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerIn(List<Byte> values) {
			addCriterion("twoManager in", values, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerNotIn(List<Byte> values) {
			addCriterion("twoManager not in", values, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerBetween(Byte value1, Byte value2) {
			addCriterion("twoManager between", value1, value2, "twomanager");
			return (Criteria) this;
		}

		public Criteria andTwomanagerNotBetween(Byte value1, Byte value2) {
			addCriterion("twoManager not between", value1, value2, "twomanager");
			return (Criteria) this;
		}

		public Criteria andOnechiefIsNull() {
			addCriterion("oneChief is null");
			return (Criteria) this;
		}

		public Criteria andOnechiefIsNotNull() {
			addCriterion("oneChief is not null");
			return (Criteria) this;
		}

		public Criteria andOnechiefEqualTo(Byte value) {
			addCriterion("oneChief =", value, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefNotEqualTo(Byte value) {
			addCriterion("oneChief <>", value, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefGreaterThan(Byte value) {
			addCriterion("oneChief >", value, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefGreaterThanOrEqualTo(Byte value) {
			addCriterion("oneChief >=", value, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefLessThan(Byte value) {
			addCriterion("oneChief <", value, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefLessThanOrEqualTo(Byte value) {
			addCriterion("oneChief <=", value, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefIn(List<Byte> values) {
			addCriterion("oneChief in", values, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefNotIn(List<Byte> values) {
			addCriterion("oneChief not in", values, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefBetween(Byte value1, Byte value2) {
			addCriterion("oneChief between", value1, value2, "onechief");
			return (Criteria) this;
		}

		public Criteria andOnechiefNotBetween(Byte value1, Byte value2) {
			addCriterion("oneChief not between", value1, value2, "onechief");
			return (Criteria) this;
		}

		public Criteria andTwochiefIsNull() {
			addCriterion("twoChief is null");
			return (Criteria) this;
		}

		public Criteria andTwochiefIsNotNull() {
			addCriterion("twoChief is not null");
			return (Criteria) this;
		}

		public Criteria andTwochiefEqualTo(Byte value) {
			addCriterion("twoChief =", value, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefNotEqualTo(Byte value) {
			addCriterion("twoChief <>", value, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefGreaterThan(Byte value) {
			addCriterion("twoChief >", value, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefGreaterThanOrEqualTo(Byte value) {
			addCriterion("twoChief >=", value, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefLessThan(Byte value) {
			addCriterion("twoChief <", value, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefLessThanOrEqualTo(Byte value) {
			addCriterion("twoChief <=", value, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefIn(List<Byte> values) {
			addCriterion("twoChief in", values, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefNotIn(List<Byte> values) {
			addCriterion("twoChief not in", values, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefBetween(Byte value1, Byte value2) {
			addCriterion("twoChief between", value1, value2, "twochief");
			return (Criteria) this;
		}

		public Criteria andTwochiefNotBetween(Byte value1, Byte value2) {
			addCriterion("twoChief not between", value1, value2, "twochief");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerIsNull() {
			addCriterion("safetyOfficer is null");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerIsNotNull() {
			addCriterion("safetyOfficer is not null");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerEqualTo(Byte value) {
			addCriterion("safetyOfficer =", value, "safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerNotEqualTo(Byte value) {
			addCriterion("safetyOfficer <>", value, "safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerGreaterThan(Byte value) {
			addCriterion("safetyOfficer >", value, "safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerGreaterThanOrEqualTo(Byte value) {
			addCriterion("safetyOfficer >=", value, "safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerLessThan(Byte value) {
			addCriterion("safetyOfficer <", value, "safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerLessThanOrEqualTo(Byte value) {
			addCriterion("safetyOfficer <=", value, "safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerIn(List<Byte> values) {
			addCriterion("safetyOfficer in", values, "safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerNotIn(List<Byte> values) {
			addCriterion("safetyOfficer not in", values, "safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerBetween(Byte value1, Byte value2) {
			addCriterion("safetyOfficer between", value1, value2,
					"safetyofficer");
			return (Criteria) this;
		}

		public Criteria andSafetyofficerNotBetween(Byte value1, Byte value2) {
			addCriterion("safetyOfficer not between", value1, value2,
					"safetyofficer");
			return (Criteria) this;
		}

		public Criteria andInspectorIsNull() {
			addCriterion("inspector is null");
			return (Criteria) this;
		}

		public Criteria andInspectorIsNotNull() {
			addCriterion("inspector is not null");
			return (Criteria) this;
		}

		public Criteria andInspectorEqualTo(Byte value) {
			addCriterion("inspector =", value, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorNotEqualTo(Byte value) {
			addCriterion("inspector <>", value, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorGreaterThan(Byte value) {
			addCriterion("inspector >", value, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorGreaterThanOrEqualTo(Byte value) {
			addCriterion("inspector >=", value, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorLessThan(Byte value) {
			addCriterion("inspector <", value, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorLessThanOrEqualTo(Byte value) {
			addCriterion("inspector <=", value, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorIn(List<Byte> values) {
			addCriterion("inspector in", values, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorNotIn(List<Byte> values) {
			addCriterion("inspector not in", values, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorBetween(Byte value1, Byte value2) {
			addCriterion("inspector between", value1, value2, "inspector");
			return (Criteria) this;
		}

		public Criteria andInspectorNotBetween(Byte value1, Byte value2) {
			addCriterion("inspector not between", value1, value2, "inspector");
			return (Criteria) this;
		}

		public Criteria andTechnicianIsNull() {
			addCriterion("technician is null");
			return (Criteria) this;
		}

		public Criteria andTechnicianIsNotNull() {
			addCriterion("technician is not null");
			return (Criteria) this;
		}

		public Criteria andTechnicianEqualTo(Byte value) {
			addCriterion("technician =", value, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianNotEqualTo(Byte value) {
			addCriterion("technician <>", value, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianGreaterThan(Byte value) {
			addCriterion("technician >", value, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianGreaterThanOrEqualTo(Byte value) {
			addCriterion("technician >=", value, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianLessThan(Byte value) {
			addCriterion("technician <", value, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianLessThanOrEqualTo(Byte value) {
			addCriterion("technician <=", value, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianIn(List<Byte> values) {
			addCriterion("technician in", values, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianNotIn(List<Byte> values) {
			addCriterion("technician not in", values, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianBetween(Byte value1, Byte value2) {
			addCriterion("technician between", value1, value2, "technician");
			return (Criteria) this;
		}

		public Criteria andTechnicianNotBetween(Byte value1, Byte value2) {
			addCriterion("technician not between", value1, value2, "technician");
			return (Criteria) this;
		}

		public Criteria andCostmemberIsNull() {
			addCriterion("costMember is null");
			return (Criteria) this;
		}

		public Criteria andCostmemberIsNotNull() {
			addCriterion("costMember is not null");
			return (Criteria) this;
		}

		public Criteria andCostmemberEqualTo(Byte value) {
			addCriterion("costMember =", value, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberNotEqualTo(Byte value) {
			addCriterion("costMember <>", value, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberGreaterThan(Byte value) {
			addCriterion("costMember >", value, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberGreaterThanOrEqualTo(Byte value) {
			addCriterion("costMember >=", value, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberLessThan(Byte value) {
			addCriterion("costMember <", value, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberLessThanOrEqualTo(Byte value) {
			addCriterion("costMember <=", value, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberIn(List<Byte> values) {
			addCriterion("costMember in", values, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberNotIn(List<Byte> values) {
			addCriterion("costMember not in", values, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberBetween(Byte value1, Byte value2) {
			addCriterion("costMember between", value1, value2, "costmember");
			return (Criteria) this;
		}

		public Criteria andCostmemberNotBetween(Byte value1, Byte value2) {
			addCriterion("costMember not between", value1, value2, "costmember");
			return (Criteria) this;
		}

		public Criteria andDocumenterIsNull() {
			addCriterion("documenter is null");
			return (Criteria) this;
		}

		public Criteria andDocumenterIsNotNull() {
			addCriterion("documenter is not null");
			return (Criteria) this;
		}

		public Criteria andDocumenterEqualTo(Byte value) {
			addCriterion("documenter =", value, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterNotEqualTo(Byte value) {
			addCriterion("documenter <>", value, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterGreaterThan(Byte value) {
			addCriterion("documenter >", value, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterGreaterThanOrEqualTo(Byte value) {
			addCriterion("documenter >=", value, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterLessThan(Byte value) {
			addCriterion("documenter <", value, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterLessThanOrEqualTo(Byte value) {
			addCriterion("documenter <=", value, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterIn(List<Byte> values) {
			addCriterion("documenter in", values, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterNotIn(List<Byte> values) {
			addCriterion("documenter not in", values, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterBetween(Byte value1, Byte value2) {
			addCriterion("documenter between", value1, value2, "documenter");
			return (Criteria) this;
		}

		public Criteria andDocumenterNotBetween(Byte value1, Byte value2) {
			addCriterion("documenter not between", value1, value2, "documenter");
			return (Criteria) this;
		}

		public Criteria andIntegratorIsNull() {
			addCriterion("integrator is null");
			return (Criteria) this;
		}

		public Criteria andIntegratorIsNotNull() {
			addCriterion("integrator is not null");
			return (Criteria) this;
		}

		public Criteria andIntegratorEqualTo(Byte value) {
			addCriterion("integrator =", value, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorNotEqualTo(Byte value) {
			addCriterion("integrator <>", value, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorGreaterThan(Byte value) {
			addCriterion("integrator >", value, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorGreaterThanOrEqualTo(Byte value) {
			addCriterion("integrator >=", value, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorLessThan(Byte value) {
			addCriterion("integrator <", value, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorLessThanOrEqualTo(Byte value) {
			addCriterion("integrator <=", value, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorIn(List<Byte> values) {
			addCriterion("integrator in", values, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorNotIn(List<Byte> values) {
			addCriterion("integrator not in", values, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorBetween(Byte value1, Byte value2) {
			addCriterion("integrator between", value1, value2, "integrator");
			return (Criteria) this;
		}

		public Criteria andIntegratorNotBetween(Byte value1, Byte value2) {
			addCriterion("integrator not between", value1, value2, "integrator");
			return (Criteria) this;
		}

		public Criteria andMaterialIsNull() {
			addCriterion("material is null");
			return (Criteria) this;
		}

		public Criteria andMaterialIsNotNull() {
			addCriterion("material is not null");
			return (Criteria) this;
		}

		public Criteria andMaterialEqualTo(Byte value) {
			addCriterion("material =", value, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialNotEqualTo(Byte value) {
			addCriterion("material <>", value, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialGreaterThan(Byte value) {
			addCriterion("material >", value, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialGreaterThanOrEqualTo(Byte value) {
			addCriterion("material >=", value, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialLessThan(Byte value) {
			addCriterion("material <", value, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialLessThanOrEqualTo(Byte value) {
			addCriterion("material <=", value, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialIn(List<Byte> values) {
			addCriterion("material in", values, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialNotIn(List<Byte> values) {
			addCriterion("material not in", values, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialBetween(Byte value1, Byte value2) {
			addCriterion("material between", value1, value2, "material");
			return (Criteria) this;
		}

		public Criteria andMaterialNotBetween(Byte value1, Byte value2) {
			addCriterion("material not between", value1, value2, "material");
			return (Criteria) this;
		}

		public Criteria andExpeditorIsNull() {
			addCriterion("expeditor is null");
			return (Criteria) this;
		}

		public Criteria andExpeditorIsNotNull() {
			addCriterion("expeditor is not null");
			return (Criteria) this;
		}

		public Criteria andExpeditorEqualTo(Byte value) {
			addCriterion("expeditor =", value, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorNotEqualTo(Byte value) {
			addCriterion("expeditor <>", value, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorGreaterThan(Byte value) {
			addCriterion("expeditor >", value, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorGreaterThanOrEqualTo(Byte value) {
			addCriterion("expeditor >=", value, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorLessThan(Byte value) {
			addCriterion("expeditor <", value, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorLessThanOrEqualTo(Byte value) {
			addCriterion("expeditor <=", value, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorIn(List<Byte> values) {
			addCriterion("expeditor in", values, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorNotIn(List<Byte> values) {
			addCriterion("expeditor not in", values, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorBetween(Byte value1, Byte value2) {
			addCriterion("expeditor between", value1, value2, "expeditor");
			return (Criteria) this;
		}

		public Criteria andExpeditorNotBetween(Byte value1, Byte value2) {
			addCriterion("expeditor not between", value1, value2, "expeditor");
			return (Criteria) this;
		}

		public Criteria andConstructionteamIsNull() {
			addCriterion("constructionTeam is null");
			return (Criteria) this;
		}

		public Criteria andConstructionteamIsNotNull() {
			addCriterion("constructionTeam is not null");
			return (Criteria) this;
		}

		public Criteria andConstructionteamEqualTo(Byte value) {
			addCriterion("constructionTeam =", value, "constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamNotEqualTo(Byte value) {
			addCriterion("constructionTeam <>", value, "constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamGreaterThan(Byte value) {
			addCriterion("constructionTeam >", value, "constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamGreaterThanOrEqualTo(Byte value) {
			addCriterion("constructionTeam >=", value, "constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamLessThan(Byte value) {
			addCriterion("constructionTeam <", value, "constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamLessThanOrEqualTo(Byte value) {
			addCriterion("constructionTeam <=", value, "constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamIn(List<Byte> values) {
			addCriterion("constructionTeam in", values, "constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamNotIn(List<Byte> values) {
			addCriterion("constructionTeam not in", values, "constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamBetween(Byte value1, Byte value2) {
			addCriterion("constructionTeam between", value1, value2,
					"constructionteam");
			return (Criteria) this;
		}

		public Criteria andConstructionteamNotBetween(Byte value1, Byte value2) {
			addCriterion("constructionTeam not between", value1, value2,
					"constructionteam");
			return (Criteria) this;
		}

		public Criteria andPluralityIsNull() {
			addCriterion("plurality is null");
			return (Criteria) this;
		}

		public Criteria andPluralityIsNotNull() {
			addCriterion("plurality is not null");
			return (Criteria) this;
		}

		public Criteria andPluralityEqualTo(Byte value) {
			addCriterion("plurality =", value, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityNotEqualTo(Byte value) {
			addCriterion("plurality <>", value, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityGreaterThan(Byte value) {
			addCriterion("plurality >", value, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityGreaterThanOrEqualTo(Byte value) {
			addCriterion("plurality >=", value, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityLessThan(Byte value) {
			addCriterion("plurality <", value, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityLessThanOrEqualTo(Byte value) {
			addCriterion("plurality <=", value, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityIn(List<Byte> values) {
			addCriterion("plurality in", values, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityNotIn(List<Byte> values) {
			addCriterion("plurality not in", values, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityBetween(Byte value1, Byte value2) {
			addCriterion("plurality between", value1, value2, "plurality");
			return (Criteria) this;
		}

		public Criteria andPluralityNotBetween(Byte value1, Byte value2) {
			addCriterion("plurality not between", value1, value2, "plurality");
			return (Criteria) this;
		}

		public Criteria andSumIsNull() {
			addCriterion("sum is null");
			return (Criteria) this;
		}

		public Criteria andSumIsNotNull() {
			addCriterion("sum is not null");
			return (Criteria) this;
		}

		public Criteria andSumEqualTo(Byte value) {
			addCriterion("sum =", value, "sum");
			return (Criteria) this;
		}

		public Criteria andSumNotEqualTo(Byte value) {
			addCriterion("sum <>", value, "sum");
			return (Criteria) this;
		}

		public Criteria andSumGreaterThan(Byte value) {
			addCriterion("sum >", value, "sum");
			return (Criteria) this;
		}

		public Criteria andSumGreaterThanOrEqualTo(Byte value) {
			addCriterion("sum >=", value, "sum");
			return (Criteria) this;
		}

		public Criteria andSumLessThan(Byte value) {
			addCriterion("sum <", value, "sum");
			return (Criteria) this;
		}

		public Criteria andSumLessThanOrEqualTo(Byte value) {
			addCriterion("sum <=", value, "sum");
			return (Criteria) this;
		}

		public Criteria andSumIn(List<Byte> values) {
			addCriterion("sum in", values, "sum");
			return (Criteria) this;
		}

		public Criteria andSumNotIn(List<Byte> values) {
			addCriterion("sum not in", values, "sum");
			return (Criteria) this;
		}

		public Criteria andSumBetween(Byte value1, Byte value2) {
			addCriterion("sum between", value1, value2, "sum");
			return (Criteria) this;
		}

		public Criteria andSumNotBetween(Byte value1, Byte value2) {
			addCriterion("sum not between", value1, value2, "sum");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("createTime is null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("createTime is not null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeEqualTo(String value) {
			addCriterion("createTime =", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotEqualTo(String value) {
			addCriterion("createTime <>", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThan(String value) {
			addCriterion("createTime >", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(String value) {
			addCriterion("createTime >=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThan(String value) {
			addCriterion("createTime <", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(String value) {
			addCriterion("createTime <=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLike(String value) {
			addCriterion("createTime like", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotLike(String value) {
			addCriterion("createTime not like", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIn(List<String> values) {
			addCriterion("createTime in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotIn(List<String> values) {
			addCriterion("createTime not in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeBetween(String value1, String value2) {
			addCriterion("createTime between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotBetween(String value1, String value2) {
			addCriterion("createTime not between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeIsNull() {
			addCriterion("updateTime is null");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeIsNotNull() {
			addCriterion("updateTime is not null");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeEqualTo(String value) {
			addCriterion("updateTime =", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeNotEqualTo(String value) {
			addCriterion("updateTime <>", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeGreaterThan(String value) {
			addCriterion("updateTime >", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeGreaterThanOrEqualTo(String value) {
			addCriterion("updateTime >=", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeLessThan(String value) {
			addCriterion("updateTime <", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeLessThanOrEqualTo(String value) {
			addCriterion("updateTime <=", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeLike(String value) {
			addCriterion("updateTime like", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeNotLike(String value) {
			addCriterion("updateTime not like", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeIn(List<String> values) {
			addCriterion("updateTime in", values, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeNotIn(List<String> values) {
			addCriterion("updateTime not in", values, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeBetween(String value1, String value2) {
			addCriterion("updateTime between", value1, value2, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeNotBetween(String value1, String value2) {
			addCriterion("updateTime not between", value1, value2, "updatetime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table enterprise_per_manage
	 * @mbggenerated  Mon Dec 14 12:58:34 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table enterprise_per_manage
     *
     * @mbggenerated do_not_delete_during_merge Mon Dec 14 09:25:22 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}