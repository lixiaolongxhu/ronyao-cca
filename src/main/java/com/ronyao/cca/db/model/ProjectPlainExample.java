package com.ronyao.cca.db.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class ProjectPlainExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public ProjectPlainExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidIsNull() {
			addCriterion("voltageRankClassifyId is null");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidIsNotNull() {
			addCriterion("voltageRankClassifyId is not null");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidEqualTo(Integer value) {
			addCriterion("voltageRankClassifyId =", value,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidNotEqualTo(Integer value) {
			addCriterion("voltageRankClassifyId <>", value,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidGreaterThan(Integer value) {
			addCriterion("voltageRankClassifyId >", value,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidGreaterThanOrEqualTo(
				Integer value) {
			addCriterion("voltageRankClassifyId >=", value,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidLessThan(Integer value) {
			addCriterion("voltageRankClassifyId <", value,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidLessThanOrEqualTo(Integer value) {
			addCriterion("voltageRankClassifyId <=", value,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidIn(List<Integer> values) {
			addCriterion("voltageRankClassifyId in", values,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidNotIn(List<Integer> values) {
			addCriterion("voltageRankClassifyId not in", values,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidBetween(Integer value1,
				Integer value2) {
			addCriterion("voltageRankClassifyId between", value1, value2,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andVoltagerankclassifyidNotBetween(Integer value1,
				Integer value2) {
			addCriterion("voltageRankClassifyId not between", value1, value2,
					"voltagerankclassifyid");
			return (Criteria) this;
		}

		public Criteria andYearIsNull() {
			addCriterion("year is null");
			return (Criteria) this;
		}

		public Criteria andYearIsNotNull() {
			addCriterion("year is not null");
			return (Criteria) this;
		}

		public Criteria andYearEqualTo(Integer value) {
			addCriterion("year =", value, "year");
			return (Criteria) this;
		}

		public Criteria andYearNotEqualTo(Integer value) {
			addCriterion("year <>", value, "year");
			return (Criteria) this;
		}

		public Criteria andYearGreaterThan(Integer value) {
			addCriterion("year >", value, "year");
			return (Criteria) this;
		}

		public Criteria andYearGreaterThanOrEqualTo(Integer value) {
			addCriterion("year >=", value, "year");
			return (Criteria) this;
		}

		public Criteria andYearLessThan(Integer value) {
			addCriterion("year <", value, "year");
			return (Criteria) this;
		}

		public Criteria andYearLessThanOrEqualTo(Integer value) {
			addCriterion("year <=", value, "year");
			return (Criteria) this;
		}

		public Criteria andYearIn(List<Integer> values) {
			addCriterion("year in", values, "year");
			return (Criteria) this;
		}

		public Criteria andYearNotIn(List<Integer> values) {
			addCriterion("year not in", values, "year");
			return (Criteria) this;
		}

		public Criteria andYearBetween(Integer value1, Integer value2) {
			addCriterion("year between", value1, value2, "year");
			return (Criteria) this;
		}

		public Criteria andYearNotBetween(Integer value1, Integer value2) {
			addCriterion("year not between", value1, value2, "year");
			return (Criteria) this;
		}

		public Criteria andProjectnumIsNull() {
			addCriterion("projectNum is null");
			return (Criteria) this;
		}

		public Criteria andProjectnumIsNotNull() {
			addCriterion("projectNum is not null");
			return (Criteria) this;
		}

		public Criteria andProjectnumEqualTo(Integer value) {
			addCriterion("projectNum =", value, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumNotEqualTo(Integer value) {
			addCriterion("projectNum <>", value, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumGreaterThan(Integer value) {
			addCriterion("projectNum >", value, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumGreaterThanOrEqualTo(Integer value) {
			addCriterion("projectNum >=", value, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumLessThan(Integer value) {
			addCriterion("projectNum <", value, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumLessThanOrEqualTo(Integer value) {
			addCriterion("projectNum <=", value, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumIn(List<Integer> values) {
			addCriterion("projectNum in", values, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumNotIn(List<Integer> values) {
			addCriterion("projectNum not in", values, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumBetween(Integer value1, Integer value2) {
			addCriterion("projectNum between", value1, value2, "projectnum");
			return (Criteria) this;
		}

		public Criteria andProjectnumNotBetween(Integer value1, Integer value2) {
			addCriterion("projectNum not between", value1, value2, "projectnum");
			return (Criteria) this;
		}

		public Criteria andLineprojectIsNull() {
			addCriterion("lineProject is null");
			return (Criteria) this;
		}

		public Criteria andLineprojectIsNotNull() {
			addCriterion("lineProject is not null");
			return (Criteria) this;
		}

		public Criteria andLineprojectEqualTo(Integer value) {
			addCriterion("lineProject =", value, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectNotEqualTo(Integer value) {
			addCriterion("lineProject <>", value, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectGreaterThan(Integer value) {
			addCriterion("lineProject >", value, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectGreaterThanOrEqualTo(Integer value) {
			addCriterion("lineProject >=", value, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectLessThan(Integer value) {
			addCriterion("lineProject <", value, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectLessThanOrEqualTo(Integer value) {
			addCriterion("lineProject <=", value, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectIn(List<Integer> values) {
			addCriterion("lineProject in", values, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectNotIn(List<Integer> values) {
			addCriterion("lineProject not in", values, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectBetween(Integer value1, Integer value2) {
			addCriterion("lineProject between", value1, value2, "lineproject");
			return (Criteria) this;
		}

		public Criteria andLineprojectNotBetween(Integer value1, Integer value2) {
			addCriterion("lineProject not between", value1, value2,
					"lineproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectIsNull() {
			addCriterion("powerProject is null");
			return (Criteria) this;
		}

		public Criteria andPowerprojectIsNotNull() {
			addCriterion("powerProject is not null");
			return (Criteria) this;
		}

		public Criteria andPowerprojectEqualTo(Integer value) {
			addCriterion("powerProject =", value, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectNotEqualTo(Integer value) {
			addCriterion("powerProject <>", value, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectGreaterThan(Integer value) {
			addCriterion("powerProject >", value, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectGreaterThanOrEqualTo(Integer value) {
			addCriterion("powerProject >=", value, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectLessThan(Integer value) {
			addCriterion("powerProject <", value, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectLessThanOrEqualTo(Integer value) {
			addCriterion("powerProject <=", value, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectIn(List<Integer> values) {
			addCriterion("powerProject in", values, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectNotIn(List<Integer> values) {
			addCriterion("powerProject not in", values, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectBetween(Integer value1, Integer value2) {
			addCriterion("powerProject between", value1, value2, "powerproject");
			return (Criteria) this;
		}

		public Criteria andPowerprojectNotBetween(Integer value1, Integer value2) {
			addCriterion("powerProject not between", value1, value2,
					"powerproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectIsNull() {
			addCriterion("assessLineProject is null");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectIsNotNull() {
			addCriterion("assessLineProject is not null");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectEqualTo(Integer value) {
			addCriterion("assessLineProject =", value, "assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectNotEqualTo(Integer value) {
			addCriterion("assessLineProject <>", value, "assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectGreaterThan(Integer value) {
			addCriterion("assessLineProject >", value, "assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectGreaterThanOrEqualTo(Integer value) {
			addCriterion("assessLineProject >=", value, "assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectLessThan(Integer value) {
			addCriterion("assessLineProject <", value, "assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectLessThanOrEqualTo(Integer value) {
			addCriterion("assessLineProject <=", value, "assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectIn(List<Integer> values) {
			addCriterion("assessLineProject in", values, "assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectNotIn(List<Integer> values) {
			addCriterion("assessLineProject not in", values,
					"assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectBetween(Integer value1,
				Integer value2) {
			addCriterion("assessLineProject between", value1, value2,
					"assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesslineprojectNotBetween(Integer value1,
				Integer value2) {
			addCriterion("assessLineProject not between", value1, value2,
					"assesslineproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectIsNull() {
			addCriterion("assessPowerProject is null");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectIsNotNull() {
			addCriterion("assessPowerProject is not null");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectEqualTo(Integer value) {
			addCriterion("assessPowerProject =", value, "assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectNotEqualTo(Integer value) {
			addCriterion("assessPowerProject <>", value, "assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectGreaterThan(Integer value) {
			addCriterion("assessPowerProject >", value, "assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectGreaterThanOrEqualTo(Integer value) {
			addCriterion("assessPowerProject >=", value, "assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectLessThan(Integer value) {
			addCriterion("assessPowerProject <", value, "assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectLessThanOrEqualTo(Integer value) {
			addCriterion("assessPowerProject <=", value, "assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectIn(List<Integer> values) {
			addCriterion("assessPowerProject in", values, "assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectNotIn(List<Integer> values) {
			addCriterion("assessPowerProject not in", values,
					"assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectBetween(Integer value1,
				Integer value2) {
			addCriterion("assessPowerProject between", value1, value2,
					"assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andAssesspowerprojectNotBetween(Integer value1,
				Integer value2) {
			addCriterion("assessPowerProject not between", value1, value2,
					"assesspowerproject");
			return (Criteria) this;
		}

		public Criteria andLinelengthIsNull() {
			addCriterion("lineLength is null");
			return (Criteria) this;
		}

		public Criteria andLinelengthIsNotNull() {
			addCriterion("lineLength is not null");
			return (Criteria) this;
		}

		public Criteria andLinelengthEqualTo(Integer value) {
			addCriterion("lineLength =", value, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthNotEqualTo(Integer value) {
			addCriterion("lineLength <>", value, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthGreaterThan(Integer value) {
			addCriterion("lineLength >", value, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthGreaterThanOrEqualTo(Integer value) {
			addCriterion("lineLength >=", value, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthLessThan(Integer value) {
			addCriterion("lineLength <", value, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthLessThanOrEqualTo(Integer value) {
			addCriterion("lineLength <=", value, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthIn(List<Integer> values) {
			addCriterion("lineLength in", values, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthNotIn(List<Integer> values) {
			addCriterion("lineLength not in", values, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthBetween(Integer value1, Integer value2) {
			addCriterion("lineLength between", value1, value2, "linelength");
			return (Criteria) this;
		}

		public Criteria andLinelengthNotBetween(Integer value1, Integer value2) {
			addCriterion("lineLength not between", value1, value2, "linelength");
			return (Criteria) this;
		}

		public Criteria andVolumeIsNull() {
			addCriterion("volume is null");
			return (Criteria) this;
		}

		public Criteria andVolumeIsNotNull() {
			addCriterion("volume is not null");
			return (Criteria) this;
		}

		public Criteria andVolumeEqualTo(Integer value) {
			addCriterion("volume =", value, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeNotEqualTo(Integer value) {
			addCriterion("volume <>", value, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeGreaterThan(Integer value) {
			addCriterion("volume >", value, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeGreaterThanOrEqualTo(Integer value) {
			addCriterion("volume >=", value, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeLessThan(Integer value) {
			addCriterion("volume <", value, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeLessThanOrEqualTo(Integer value) {
			addCriterion("volume <=", value, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeIn(List<Integer> values) {
			addCriterion("volume in", values, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeNotIn(List<Integer> values) {
			addCriterion("volume not in", values, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeBetween(Integer value1, Integer value2) {
			addCriterion("volume between", value1, value2, "volume");
			return (Criteria) this;
		}

		public Criteria andVolumeNotBetween(Integer value1, Integer value2) {
			addCriterion("volume not between", value1, value2, "volume");
			return (Criteria) this;
		}

		public Criteria andInvestmentIsNull() {
			addCriterion("investment is null");
			return (Criteria) this;
		}

		public Criteria andInvestmentIsNotNull() {
			addCriterion("investment is not null");
			return (Criteria) this;
		}

		public Criteria andInvestmentEqualTo(BigDecimal value) {
			addCriterion("investment =", value, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentNotEqualTo(BigDecimal value) {
			addCriterion("investment <>", value, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentGreaterThan(BigDecimal value) {
			addCriterion("investment >", value, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentGreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("investment >=", value, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentLessThan(BigDecimal value) {
			addCriterion("investment <", value, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentLessThanOrEqualTo(BigDecimal value) {
			addCriterion("investment <=", value, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentIn(List<BigDecimal> values) {
			addCriterion("investment in", values, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentNotIn(List<BigDecimal> values) {
			addCriterion("investment not in", values, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("investment between", value1, value2, "investment");
			return (Criteria) this;
		}

		public Criteria andInvestmentNotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("investment not between", value1, value2, "investment");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("createTime is null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("createTime is not null");
			return (Criteria) this;
		}

		public Criteria andCreatetimeEqualTo(String value) {
			addCriterion("createTime =", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotEqualTo(String value) {
			addCriterion("createTime <>", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThan(String value) {
			addCriterion("createTime >", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(String value) {
			addCriterion("createTime >=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThan(String value) {
			addCriterion("createTime <", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(String value) {
			addCriterion("createTime <=", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeLike(String value) {
			addCriterion("createTime like", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotLike(String value) {
			addCriterion("createTime not like", value, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeIn(List<String> values) {
			addCriterion("createTime in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotIn(List<String> values) {
			addCriterion("createTime not in", values, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeBetween(String value1, String value2) {
			addCriterion("createTime between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andCreatetimeNotBetween(String value1, String value2) {
			addCriterion("createTime not between", value1, value2, "createtime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeIsNull() {
			addCriterion("updateTime is null");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeIsNotNull() {
			addCriterion("updateTime is not null");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeEqualTo(String value) {
			addCriterion("updateTime =", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeNotEqualTo(String value) {
			addCriterion("updateTime <>", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeGreaterThan(String value) {
			addCriterion("updateTime >", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeGreaterThanOrEqualTo(String value) {
			addCriterion("updateTime >=", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeLessThan(String value) {
			addCriterion("updateTime <", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeLessThanOrEqualTo(String value) {
			addCriterion("updateTime <=", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeLike(String value) {
			addCriterion("updateTime like", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeNotLike(String value) {
			addCriterion("updateTime not like", value, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeIn(List<String> values) {
			addCriterion("updateTime in", values, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeNotIn(List<String> values) {
			addCriterion("updateTime not in", values, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeBetween(String value1, String value2) {
			addCriterion("updateTime between", value1, value2, "updatetime");
			return (Criteria) this;
		}

		public Criteria andUpdatetimeNotBetween(String value1, String value2) {
			addCriterion("updateTime not between", value1, value2, "updatetime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table project_plain
	 * @mbggenerated  Tue Dec 22 14:07:13 CST 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table project_plain
     *
     * @mbggenerated do_not_delete_during_merge Thu Dec 17 15:17:49 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}